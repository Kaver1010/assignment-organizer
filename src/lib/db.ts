import mysql from 'mysql2/promise';

const pool = mysql.createPool({
  host: '65.108.73.224',
  port: 3306,
  user: 'u658_roYlx2rdbI',
  password: 'k+h!j2ClwYI.5jMs9znZE0eL',
  database: 's658_storage',
  waitForConnections: true,
  connectionLimit: 10,
  queueLimit: 0,
});

console.log('üìä –°–æ–∑–¥–∞–Ω –ø—É–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');

export async function query<T>(sql: string, params?: any[]): Promise<T> {
  console.log('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∑–∞–ø—Ä–æ—Å–∞:', {
    sql,
    params: params || []
  });
  
  try {
    const [rows] = await pool.execute(sql, params);
    console.log('‚úÖ SQL –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    return rows as T;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∑–∞–ø—Ä–æ—Å–∞:', error);
    throw error;
  }
}

// SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ç–∞–±–ª–∏—Ü
const createTables = async () => {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤...');
    await query(`
      CREATE TABLE IF NOT EXISTS subjects (
        id VARCHAR(36) PRIMARY KEY,
        name VARCHAR(255) NOT NULL
      )
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞');

    // –¢–∞–±–ª–∏—Ü–∞ –∑–∞–¥–∞–Ω–∏–π
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–¥–∞–Ω–∏–π...');
    await query(`
      CREATE TABLE IF NOT EXISTS tasks (
        id VARCHAR(36) PRIMARY KEY,
        subject_id VARCHAR(36) NOT NULL,
        content TEXT NOT NULL,
        due_date DATETIME NOT NULL,
        completed BOOLEAN DEFAULT FALSE,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (subject_id) REFERENCES subjects(id)
      )
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –∑–∞–¥–∞–Ω–∏–π —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞');

    // –¢–∞–±–ª–∏—Ü–∞ —Ñ–∞–π–ª–æ–≤
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Ñ–∞–π–ª–æ–≤...');
    await query(`
      CREATE TABLE IF NOT EXISTS task_files (
        id VARCHAR(36) PRIMARY KEY,
        task_id VARCHAR(36) NOT NULL,
        file_name VARCHAR(255) NOT NULL,
        file_path VARCHAR(255) NOT NULL,
        file_type VARCHAR(50) NOT NULL,
        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE
      )
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Ñ–∞–π–ª–æ–≤ —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞');
    
    console.log('‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü:', error);
    throw error;
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
createTables().catch(console.error);

export default pool;